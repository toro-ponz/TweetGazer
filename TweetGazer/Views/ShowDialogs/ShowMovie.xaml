<UserControl
    x:Class="TweetGazer.Views.ShowDialogs.ShowMovie"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Media="https://github.com/JohanLarsson/Gu.Wpf.Media"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <UserControl.InputBindings>
        <KeyBinding
            Key="Space"
            Command="TogglePlayPause"
            CommandTarget="{Binding ElementName=MediaElement}" />
        <KeyBinding
            Key="Left"
            Command="Media:Commands.SkipBack"
            CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding Command="Media:Commands.SkipBack" CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <Media:MouseWheelGesture Direction="Down" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding
            Key="Left"
            Command="Media:Commands.SkipBack"
            CommandParameter="60"
            CommandTarget="{Binding ElementName=MediaElement}"
            Modifiers="Control" />
        <MouseBinding
            Command="Media:Commands.SkipBack"
            CommandParameter="60"
            CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <Media:MouseWheelGesture Direction="Down" Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding
            Key="Right"
            Command="Media:Commands.SkipForward"
            CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding Command="Media:Commands.SkipForward" CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <Media:MouseWheelGesture Direction="Up" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding
            Key="Right"
            Command="Media:Commands.SkipForward"
            CommandParameter="60"
            CommandTarget="{Binding ElementName=MediaElement}"
            Modifiers="Control" />
        <MouseBinding
            Command="Media:Commands.SkipForward"
            CommandParameter="60"
            CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <Media:MouseWheelGesture Direction="Up" Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>
    </UserControl.InputBindings>

    <Grid Margin="0">
        <Button
            Margin="0"
            Padding="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Click="CloseButton_Click"
            Style="{StaticResource FlatButtonStyle}">
            <Grid Background="#50000000">
                <Button
                    Margin="30,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Click="BlockButton_Click"
                    Style="{StaticResource FlatButtonStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Controls:ProgressRing Visibility="{Binding ElementName=MediaElement, Path=HasMedia, Converter={StaticResource BooleanInvertAndToVisibilityConverter}}" />

                        <Media:MediaElementWrapper
                            x:Name="MediaElement"
                            Grid.Row="0"
                            LoadedBehavior="Play"
                            ScrubbingEnabled="True"
                            Stretch="Uniform"
                            StretchDirection="Both" />

                        <ToggleButton
                            Grid.Column="0"
                            IsChecked="{Binding ElementName=MediaElement, Path=IsPlaying}"
                            IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}"
                            Opacity="0" />

                        <Grid
                            Grid.Row="1"
                            VerticalAlignment="Bottom"
                            Background="Black">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Slider
                                Grid.Row="0"
                                Media:Drag.PauseWhileDragging="{Binding ElementName=MediaElement}"
                                IsMoveToPointEnabled="True"
                                Maximum="{Binding ElementName=MediaElement, Path=Length, Converter={x:Static Media:NullableTimeSpanToSecondsConverter.Default}}"
                                Minimum="0"
                                Style="{StaticResource {x:Static Media:Styles.ProgressSliderStyleKey}}"
                                Value="{Binding ElementName=MediaElement, Path=Position, Converter={x:Static Media:NullableTimeSpanToSecondsConverter.Default}}" />

                            <Grid Grid.Row="1">
                                <Grid.Resources>
                                    <Style BasedOn="{StaticResource {x:Static Media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type Button}" />
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ToggleButton
                                    Grid.Column="0"
                                    IsChecked="{Binding ElementName=MediaElement, Path=IsPlaying}"
                                    IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                                    <ToggleButton.Style>
                                        <Style BasedOn="{StaticResource {x:Static Media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Media:Icon.Geometry" Value="{StaticResource {x:Static Media:Geometries.PauseGeometryKey}}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter Property="Media:Icon.Geometry" Value="{StaticResource {x:Static Media:Geometries.PlayGeometryKey}}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <ToggleButton
                                    Grid.Column="1"
                                    IsChecked="{Binding ElementName=MediaElement, Path=IsMuted}"
                                    IsEnabled="{Binding ElementName=MediaElement, Path=HasMedia}">
                                    <ToggleButton.Style>
                                        <Style BasedOn="{StaticResource {x:Static Media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Media:Icon.Geometry" Value="{StaticResource {x:Static Media:Geometries.UnMuteGeometryKey}}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Media:Icon.Geometry" Value="{StaticResource {x:Static Media:Geometries.MuteGeometryKey}}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <TextBlock
                                    Grid.Column="2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    FontSize="20"
                                    Foreground="White">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} / {1}">
                                            <Binding
                                                Converter="{x:Static Media:TimeSpanToStringConverter.Default}"
                                                ElementName="MediaElement"
                                                Path="Position" />
                                            <Binding
                                                Converter="{x:Static Media:TimeSpanToStringConverter.Default}"
                                                ElementName="MediaElement"
                                                Path="Length" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                                <Button Grid.Column="3" />

                                <Button Grid.Column="4" />
                            </Grid>
                        </Grid>
                    </Grid>
                </Button>
                <Button
                    Width="30"
                    Height="30"
                    Margin="10"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Click="CloseButton_Click"
                    Style="{StaticResource UwpLikeButtonStyle2}">
                    <ContentControl ContentTemplate="{StaticResource AccentColorCloseIcon}" />
                </Button>
            </Grid>
        </Button>
    </Grid>
</UserControl>
