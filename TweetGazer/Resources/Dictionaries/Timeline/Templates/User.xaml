<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="clr-namespace:TweetGazer.Behaviors"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <DataTemplate x:Key="User">
        <StackPanel DataContext="{Binding Path=UserProperties}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    MinHeight="73" />
                <Image
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Behaviors:ImageBehavior.Source="{Binding Path=ProfileBanner, Mode=OneWay}" />
                <Image
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    Width="100"
                    Height="100"
                    Margin="10,5"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Behaviors:ImageBehavior.Source="{Binding Path=ProfileImageOriginal, Mode=OneWay}" />
                <StackPanel
                    Grid.Row="2"
                    Margin="5"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <Button
                        x:Name="SettingsButton"
                        Width="25"
                        Height="25"
                        Margin="5"
                        Style="{StaticResource UwpLikeButtonStyle2}">
                        <ContentControl ContentTemplate="{StaticResource FrontColorSettingsIcon}" />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:ChangePropertyAction
                                    PropertyName="IsOpen"
                                    TargetObject="{Binding Path=ContextMenu, ElementName=SettingsButton}"
                                    Value="True" />
                                <ei:ChangePropertyAction
                                    PropertyName="HorizontalOffset"
                                    TargetObject="{Binding Path=ContextMenu, ElementName=SettingsButton}"
                                    Value="100" />
                                <ei:ChangePropertyAction
                                    PropertyName="Placement"
                                    TargetObject="{Binding Path=ContextMenu, ElementName=SettingsButton}"
                                    Value="Mouse" />
                                <ei:ChangePropertyAction
                                    PropertyName="PlacementTarget"
                                    TargetObject="{Binding Path=ContextMenu, ElementName=SettingsButton}"
                                    Value="{Binding ElementName=SettingsButton, Mode=OneWay}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseRightButtonDown">
                                <ei:ChangePropertyAction
                                    PropertyName="HorizontalOffset"
                                    TargetObject="{Binding Path=ContextMenu, ElementName=SettingsButton}"
                                    Value="100" />
                                <ei:ChangePropertyAction
                                    PropertyName="Placement"
                                    TargetObject="{Binding Path=ContextMenu, ElementName=SettingsButton}"
                                    Value="MousePoint" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.ContextMenu>
                            <ContextMenu Width="200">
                                <MenuItem
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{Binding Path=SendMessageCommand, Mode=OneTime}"
                                    Visibility="{Binding Path=IsOwn, Mode=OneWay, Converter={StaticResource BooleanInvertAndToVisibilityConverter}}">
                                    <MenuItem.Header>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Text="メッセージを送信"
                                            TextAlignment="Center" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem
                                    Command="{Binding Path=ShowListCommand, Mode=OneTime}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                    <MenuItem.Header>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Text="リストを表示"
                                            TextAlignment="Center" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{Binding Path=AddToListCommand, Mode=OneTime}"
                                    Visibility="{Binding Path=IsOwn, Mode=OneWay, Converter={StaticResource BooleanInvertAndToVisibilityConverter}}">
                                    <MenuItem.Header>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Text="リストに追加"
                                            TextAlignment="Center" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{Binding Path=BlockCommand, Mode=OneTime}"
                                    IsEnabled="{Binding Path=IsOwn, Mode=OneWay, Converter={StaticResource BooleanInvertConverter}}"
                                    Visibility="{Binding Path=IsBlocking, Mode=OneWay, Converter={StaticResource BooleanInvertAndToVisibilityConverter}}">
                                    <MenuItem.Header>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Text="ブロック"
                                            TextAlignment="Center" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{Binding Path=MuteCommand, Mode=OneTime}"
                                    IsEnabled="{Binding Path=IsOwn, Mode=OneWay, Converter={StaticResource BooleanInvertConverter}}"
                                    Visibility="{Binding Path=IsMuting, Mode=OneWay, Converter={StaticResource BooleanInvertAndToVisibilityConverter}}">
                                    <MenuItem.Header>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Text="ミュート"
                                            TextAlignment="Center" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Command="{Binding Path=DestroyMuteCommand, Mode=OneTime}"
                                    IsEnabled="{Binding Path=IsOwn, Mode=OneWay, Converter={StaticResource BooleanInvertConverter}}"
                                    Visibility="{Binding Path=IsMuting, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <MenuItem.Header>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Text="ミュート解除"
                                            TextAlignment="Center" />
                                    </MenuItem.Header>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button
                        Width="120"
                        Height="35"
                        Margin="5"
                        Command="{Binding Path=ButtonCommand, Mode=OneTime}"
                        Visibility="{Binding Path=IsOwn, Mode=OneWay, Converter={StaticResource BooleanInvertAndToVisibilityConverter}}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource AccentedSquareButtonStyle}" TargetType="Button">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Content" Value="{Binding Path=HoveringButtonText, Mode=OneWay}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Content" Value="{Binding Path=ButtonText, Mode=OneWay}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
            <StackPanel Margin="10,0">
                <TextBlock FontSize="16" TextWrapping="Wrap">
                    <Run
                        FontSize="18"
                        Foreground="{DynamicResource TextBrush}"
                        Text="{Binding Path=Name, Mode=OneTime}" />
                    <ContentControl
                        Width="18"
                        Height="18"
                        VerticalAlignment="Center"
                        ContentTemplate="{StaticResource FrontColorLockedIcon}"
                        Visibility="{Binding Path=IsProtected, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                    <ContentControl
                        Width="18"
                        Height="18"
                        VerticalAlignment="Center"
                        ContentTemplate="{StaticResource AccentColorVerifiedIcon}"
                        Visibility="{Binding Path=IsVerified, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                    <LineBreak />
                    <Run Foreground="{DynamicResource GrayBrush2}" Text="{Binding Path=ScreenName, Mode=OneTime, StringFormat=@{0}}" />
                </TextBlock>
                <TextBlock
                    Behaviors:StatausTextBlockBehavior.Source="{Binding Path=Description, Mode=OneTime}"
                    FontSize="16"
                    Foreground="{DynamicResource TextBrush}"
                    TextWrapping="Wrap" />
                <TextBlock
                    FontSize="16"
                    Foreground="{DynamicResource GrayBrush2}"
                    TextWrapping="Wrap">
                    <Run FontSize="14" Text="{Binding Path=CreatedAt, Mode=OneTime, StringFormat={}{0:yyyy年MM月dd日}に登録}" />
                    <LineBreak />
                    <Run FontSize="14" Text="{Binding Path=StatusesCount, Mode=OneTime, StringFormat={}{0:#\,0}件のツイート}" />
                    <Run FontSize="14" Text="{Binding Path=FavouritesCount, Mode=OneTime, StringFormat={}{0:#\,0}件のいいね}" />
                </TextBlock>
                <TextBlock FontSize="16" TextWrapping="Wrap">
                    <Hyperlink
                        x:Name="Url"
                        Command="{Binding Path=UrlCommand, Mode=OneTime}"
                        CommandParameter="{Binding ElementName=Url, Path=NavigateUri}"
                        Foreground="{DynamicResource GrayBrush2}"
                        NavigateUri="{Binding Path=Url, Mode=OneTime}">
                        <Run Text="{Binding Path=UrlText, Mode=OneTime}" />
                    </Hyperlink>
                </TextBlock>
                <TextBlock FontSize="16" TextWrapping="Wrap">
                    <Run Foreground="{DynamicResource TextBrush}" Text="{Binding Path=FriendsCount, Mode=OneTime, StringFormat={}{0:#\,0}}" />
                    <Run Foreground="{DynamicResource GrayBrush2}" Text="フォロー　" />
                    <Run Foreground="{DynamicResource TextBrush}" Text="{Binding Path=FollowersCount, Mode=OneTime, StringFormat={}{0:#\,0}}" />
                    <Run Foreground="{DynamicResource GrayBrush2}" Text="フォロワー" />
                </TextBlock>
            </StackPanel>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>